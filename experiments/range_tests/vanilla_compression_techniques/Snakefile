import numpy as np

configfile: "config.yaml"

compression_modes = config['compression_modes']
block_sizes = config['block_sizes']
range_sizes = list(map(str, map(int, np.array([1]) * 100000)))
from_max_idx = 800000
msids = config["species"]


wildcard_constraints:
    compress="(" + ")|(".join(compression_modes) + ")",
    msid="(" + ")|(".join(msids) + ")"


rule all:
    input:
        expand("{msid}.t.ms.{c}", msid=msids, c=compression_modes)


rule compress_ms:
    input:
        "{msid}.t.ms"
    output:
        ms=protected("{msid}.t.ms.{compress}"),
        hist= "{msid}.t.ms.{compress}.hist"
    wildcard_constraints:
        compress="(" + ")|(".join(compression_modes) + ")"
    threads: 1
    shell:
        ("if [ '{wildcards.compress}' == 'none' ] ; "
         "then cp -v {input} {output.ms} && touch {output.hist}; "
         "else {config[compress_exe]} -ms_path {input} -compression {wildcards.compress} > {output.hist}; "
         "fi")

