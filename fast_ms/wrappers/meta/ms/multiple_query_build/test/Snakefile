import random
from pathlib import Path

configfile : "config.yml"


bins =     "../../../../../bin"
w_dir = "../../../../"

raw_target_paths = expand("targets.raw/{sid}", sid=config["targets"])
cst_paths = expand("targets.raw/{sid}.{d}.stree", sid=config["targets"], d=["fwd", "rev"])
raw_query_paths = expand("queries.raw/{sid}", sid=config["queries"])
ms_paths = expand("queries.raw/{sid}.ms", sid=config["queries"])

wildcard_constraints:
    fid="(queries)|(targets)",
    sid="(" + ")|(".join(config["targets"] + config["queries"]) + ")",
    tsid="(" + ")|(".join(config["targets"]) + ")",
    qsid="(" + ")|(".join(config["queries"]) + ")"


rule all:
    input:
        ms_paths

rule ms:
    input:
        s="targets.raw/t1",
        t="queries.raw/{qsid}",
        fwd_cst="targets.raw/t1.fwd.stree",
        rev_cst="targets.raw/t1.rev.stree",
    output:
        "queries.raw/{qsid}.runs", "queries.raw/{qsid}.ms"
    params:
       exec_path=str(Path(bins, "matching_stats_parallel.x")),
       lca_parents=1,
       rank_fail=1,
       double_rank=1
    wrapper:
        "file:" + str(Path(w_dir, "ms"))
        

rule cst:
    input:
        "targets.raw/{tsid}"
    output:
        "targets.raw/{tsid}.fwd.stree", "targets.raw/{tsid}.rev.stree"
    threads:
        1
    params:
       exe=Path(bins, "dump_cst.x")
    shell:
        "{params.exe} -s_path {input}"


rule extract_fa:
    input:
        "data.fa/{fid}"
    output:
        "{fid}.raw/{sid}"
    threads:
        1
    run:
        import fastaparser
        with open(str(input)) as fd:
            reader = fastaparser.Reader(fd, parse_method='quick')
            for seq in reader:
                if seq.header[1:].strip() != wildcards.sid:
                    continue
                with open(str(output), 'wt') as ofd:
                    ofd.write(seq.sequence)
