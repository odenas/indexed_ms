import sys
sys.path.append("..")
from _paths import *

def i(s, idir=idir):
    return os.path.join(idir, s)


rule all:
    input:
        expand("{b}.mstat.fast.{suff}",
               b=iids, suff=['a1', 'dr', 'parallel'])

rule fast_parallel:
    input:
        s=i(ipair("{inid}").s),
        t=i(ipair("{inid}").t),
        a=i(ipair("{inid}").mstat),
        rcst=i(ipair("{inid}").rev_cst),
        fcst=i(ipair("{inid}").fwd_cst),
        mr=i(ipair("{inid}").maxrep)
    output:
        "{inid}.mstat.fast.parallel"
    params:
        exe1=ms_par,
        exe2=print_int_ms
    threads: 4
    shell:
        ("{params.exe1} -s_path {input.s} -t_path {input.t} -load_cst 1 "
         "-lca_parents 1 -rank_fail 1 -double_rank 1 -nthreads {threads} && "
         "{params.exe2} -ms_path {input.t}.ms >{output} && "
         "diff -q {input.a} {output}"
         )

rule fast_a1:
    input:
        s=i(ipair("{inid}").s),
        t=i(ipair("{inid}").t),
        a=i(ipair("{inid}").mstat),
        rcst=i(ipair("{inid}").rev_cst),
        fcst=i(ipair("{inid}").fwd_cst),
        mr=i(ipair("{inid}").maxrep)
    output:
        "{inid}.mstat.fast.a1"
    params:
        exe1=ms_par,
        exe2=print_int_ms
    shell:
        ("{params.exe1} -s_path {input.s} -t_path {input.t} "
         "-load_cst 1 -load_maxrep 1 && "
         "{params.exe2} -ms_path {input.t}.ms >{output} && "
         "diff -q {input.a} {output}"
         )

rule fast_dr:
    input:
        s=i(ipair("{inid}").s),
        t=i(ipair("{inid}").t),
        a=i(ipair("{inid}").mstat),
        rcst=i(ipair("{inid}").rev_cst),
        fcst=i(ipair("{inid}").fwd_cst),
        mr=i(ipair("{inid}").maxrep)
    output:
        "{inid}.mstat.fast.dr"
    params:
        exe1=ms_par,
        exe2=print_int_ms
    shell:
        ("{params.exe1} -s_path {input.s} -t_path {input.t} -load_cst 1 "
         "-lca_parents 1 -rank_fail 1 -double_rank 1 && "
         "{params.exe2} -ms_path {input.t}.ms >{output} && "
         "diff -q {input.a} {output}"
         )
